import{_ as t,c as i,a as o,b as n,d as e,e as l,f as p,r,o as c}from"./app-LcY0-K8R.js";const u={};function d(m,s){const a=r("RouteLink");return c(),i("div",null,[s[8]||(s[8]=o(`<h1 id="authentication" tabindex="-1"><a class="header-anchor" href="#authentication"><span>Authentication</span></a></h1><div class="hint-container tip"><p class="hint-container-title">提示</p><p>There is a permission system for each model, so we have to authenticate the user before we access the data.</p></div><p>We use <strong>JWT</strong> (json Web Token) to authenticate the user. The token is generated by the server and sent back to the client. The client can then send the token in 2 ways: in the <code>Authorization</code> header or in the <code>token</code> cookie.</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">Authorization: Bearer &lt;token&gt;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">Cookie: token=&lt;token&gt;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="register" tabindex="-1"><a class="header-anchor" href="#register"><span>Register</span></a></h2><p>To register a new user, you can use the following request:</p><p><code>POST /api/register</code></p><p><strong>Request Body</strong></p><div class="language-json line-numbers-mode" data-highlighter="prismjs" data-ext="json" data-title="json"><pre><code><span class="line"><span class="token punctuation">{</span></span>
<span class="line">    <span class="token property">&quot;username&quot;</span><span class="token operator">:</span> <span class="token string">&quot;required, length 3-20&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">&quot;password&quot;</span><span class="token operator">:</span> <span class="token string">&quot;required, length 3-20&quot;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Response Body</strong></p><div class="language-json line-numbers-mode" data-highlighter="prismjs" data-ext="json" data-title="json"><pre><code><span class="line"><span class="token punctuation">{</span></span>
<span class="line">    <span class="token property">&quot;code&quot;</span><span class="token operator">:</span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token comment">// 200 for success and 400 for error.</span></span>
<span class="line">    <span class="token property">&quot;msg&quot;</span><span class="token operator">:</span> <span class="token string">&quot;注册成功&quot;</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Then the information will be stored in the builtin SQLite database, with password hashed.</p><h2 id="login" tabindex="-1"><a class="header-anchor" href="#login"><span>Login</span></a></h2><p>Authenticate as a user.</p><p><code>POST /api/login</code><strong>Request Body</strong></p><div class="language-json line-numbers-mode" data-highlighter="prismjs" data-ext="json" data-title="json"><pre><code><span class="line"><span class="token punctuation">{</span></span>
<span class="line">    <span class="token property">&quot;username&quot;</span><span class="token operator">:</span> <span class="token string">&quot;required&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">&quot;password&quot;</span><span class="token operator">:</span> <span class="token string">&quot;required&quot;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Response Body</strong></p><div class="language-json line-numbers-mode" data-highlighter="prismjs" data-ext="json" data-title="json"><pre><code><span class="line"><span class="token comment">//When fails:</span></span>
<span class="line"><span class="token punctuation">{</span></span>
<span class="line">    <span class="token property">&quot;code&quot;</span><span class="token operator">:</span> <span class="token number">400</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">&quot;msg&quot;</span><span class="token operator">:</span> <span class="token string">&quot;用户名或密码错误&quot;</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">//When success:</span></span>
<span class="line"><span class="token comment">// Set-Cookie: token=&lt;token&gt;</span></span>
<span class="line"><span class="token punctuation">{</span></span>
<span class="line">    <span class="token property">&quot;code&quot;</span><span class="token operator">:</span> <span class="token number">200</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">&quot;msg&quot;</span><span class="token operator">:</span> <span class="token string">&quot;登录成功&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">&quot;data&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token property">&quot;token&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&lt;token&gt;&quot;</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token property">&quot;user&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token number">114514</span><span class="token punctuation">,</span></span>
<span class="line">            <span class="token property">&quot;username&quot;</span><span class="token operator">:</span> <span class="token string">&quot;username&quot;</span><span class="token punctuation">,</span></span>
<span class="line">            <span class="token property">&quot;password&quot;</span><span class="token operator">:</span> <span class="token string">&quot;hashed&quot;</span><span class="token punctuation">,</span></span>
<span class="line">            <span class="token property">&quot;lastontime&quot;</span><span class="token operator">:</span> <span class="token string">&quot;2024-10-04 13:17:52&quot;</span><span class="token punctuation">,</span> <span class="token comment">//last login time</span></span>
<span class="line">            <span class="token property">&quot;role&quot;</span><span class="token operator">:</span> <span class="token string">&quot;user&quot;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="permissions-and-roles" tabindex="-1"><a class="header-anchor" href="#permissions-and-roles"><span>Permissions and Roles</span></a></h2><p>Be careful to distinct between model permissions and field permissions.</p><div class="hint-container tip"><p class="hint-container-title">提示</p><p><strong>Model Permissions</strong></p><ul><li><strong>C</strong> : Creating items.</li><li><strong>RO</strong> : Reading one item.</li><li><strong>RL</strong> : Reading more than 1 items.</li><li><strong>R</strong> : Short for both <code>RO</code> and <code>RL</code>.</li><li><strong>U</strong> : Updating items.</li><li><strong>D</strong> : Deleting items.</li></ul></div><div class="hint-container tip"><p class="hint-container-title">提示</p><p><strong>Field Permissions</strong></p><ul><li><strong>r</strong> : Reading field value, used when reading an item.</li><li><strong>w</strong> : Writing field value, used when updating an item. (Creating not influnced)</li><li><strong>p</strong> : Populating field value, used when reading an item.</li></ul></div><p>You can define each permission in your role, but there are two builtin roles.</p>`,24)),n("ul",null,[s[7]||(s[7]=n("li",null,[n("strong",null,"PUBLIC"),e(" : means unlogined user. You can define permission for this role.")],-1)),n("li",null,[s[1]||(s[1]=n("strong",null,"DEFAULT",-1)),s[2]||(s[2]=e(" : If no role matched, this role will be used. You can define permission for this role. By default, it is ")),s[3]||(s[3]=n("code",null,"C,R,U,D",-1)),s[4]||(s[4]=e(" model permissions and ")),s[5]||(s[5]=n("code",null,"r,w,p",-1)),s[6]||(s[6]=e(" field permissions, which can be set in ")),l(a,{to:"/zh/developing/globalSettings.html"},{default:p(()=>s[0]||(s[0]=[e("Global Settings")])),_:1})])])])}const v=t(u,[["render",d],["__file","authentication.html.vue"]]),h=JSON.parse('{"path":"/zh/guide/authentication.html","title":"Authentication","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"Register","slug":"register","link":"#register","children":[]},{"level":2,"title":"Login","slug":"login","link":"#login","children":[]},{"level":2,"title":"Permissions and Roles","slug":"permissions-and-roles","link":"#permissions-and-roles","children":[]}],"git":{"updatedTime":1728307129000,"contributors":[{"name":"douyachan","email":"caohaozhe@163.com","commits":1}]},"filePathRelative":"zh/guide/authentication.md"}');export{v as comp,h as data};
